{"ast":null,"code":"var _jsxFileName = \"/Users/ng075210/React-Projects/UDEMY/crwn-clothing/src/pages/shop/shop.component.js\";\nimport React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport Collection from '../../components/collection/collection.component';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collection');\n    collectionRef.onSnapshot(async snapshot => {\n      const collections = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collections);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: Collection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/ng075210/React-Projects/UDEMY/crwn-clothing/src/pages/shop/shop.component.js"],"names":["React","Route","connect","updateCollections","CollectionOverview","Collection","firestore","convertCollectionSnapshotToMap","ShopPage","Component","unSubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collections","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,uBADqC,GACX,IADW;AAAA;;AAGrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAER,MAAAA;AAAF,QAAwB,KAAKS,KAAnC;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,YAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACzC,YAAMC,WAAW,GAAGV,8BAA8B,CAACS,QAAD,CAAlD;AACAb,MAAAA,iBAAiB,CAACc,WAAD,CAAjB;AACD,KAHD;AAID;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEhB,kBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEf,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAnBoC;;AAsBvC,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,iBAAiB,EAAEoB,cAAc,IAAID,QAAQ,CAACnB,iBAAiB,CAACoB,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAerB,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport Collection from '../../components/collection/collection.component';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  unSubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collection');\n    collectionRef.onSnapshot(async snapshot => {\n      const collections = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collections);\n    })\n  }\n  render() {\n    const { match } = this.props\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionOverview}></Route>\n        <Route path={`${match.path}/:collectionId`} component={Collection}></Route>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}