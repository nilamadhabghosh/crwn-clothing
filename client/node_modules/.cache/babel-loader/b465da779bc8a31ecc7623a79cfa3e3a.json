{"ast":null,"code":"var _jsxFileName = \"/Users/ng075210/React-Projects/UDEMY/crwn-clothing/src/pages/shop/shop.component.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport Collection from '../../components/collection/collection.component';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nconst CollectionsOvervieWithSpinner = withSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = withSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unSubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collection');\n    collectionRef.onSnapshot(async snapshot => {\n      const collections = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collections);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOvervieWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/ng075210/React-Projects/UDEMY/crwn-clothing/src/pages/shop/shop.component.js"],"names":["React","Route","connect","updateCollections","CollectionOverview","withSpinner","Collection","firestore","convertCollectionSnapshotToMap","CollectionsOvervieWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unSubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collections","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,MAAMC,6BAA6B,GAAGJ,WAAW,CAACD,kBAAD,CAAjD;AACA,MAAMM,yBAAyB,GAAGL,WAAW,CAACC,UAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAIrCC,uBAJqC,GAIX,IAJW;AAAA;;AAMrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEb,MAAAA;AAAF,QAAwB,KAAKc,KAAnC;AACA,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,YAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,WAAW,GAAGd,8BAA8B,CAACa,QAAD,CAAlD;AACAlB,MAAAA,iBAAiB,CAACmB,WAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD;;AACDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEY,KAAK,CAACC,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGT,KAAD,IACN,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEH;AAA1C,SAAuDG,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGT,KAAD,IACN,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAiBD;;AAnCoC;;AAsCvC,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACxCzB,EAAAA,iBAAiB,EAAG0B,cAAD,IACjBD,QAAQ,CAACzB,iBAAiB,CAAC0B,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAe3B,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\n\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport Collection from '../../components/collection/collection.component';\nimport {\n  firestore,\n  convertCollectionSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nconst CollectionsOvervieWithSpinner = withSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = withSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  state = {\n    loading: true,\n  };\n  unSubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection('collection');\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collections = convertCollectionSnapshotToMap(snapshot);\n      updateCollections(collections);\n      this.setState({ loading: false });\n    });\n  }\n  render() {\n    const { match } = this.props;\n    const { loading } = this.state;\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${match.path}`}\n          render={(props) => (\n            <CollectionsOvervieWithSpinner isLoading={loading} {...props} />\n          )}\n        ></Route>\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\n          )}\n        ></Route>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}