{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyBAZq3mOeToR-cx-tRpkpRyRYYbNMpVVug\",\n  authDomain: \"crwn-db-7e72d.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-7e72d.firebaseio.com\",\n  projectId: \"crwn-db-7e72d\",\n  storageBucket: \"crwn-db-7e72d.appspot.com\",\n  messagingSenderId: \"47115180316\",\n  appId: \"1:47115180316:web:0c2aacc2ad8b8a1f3cc2d9\",\n  measurementId: \"G-DYD43V14E6\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (colleactionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(colleactionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionref.doc();\n    batch.set(newDocref, obj);\n  });\n  return await batch.commit();\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/ng075210/React-Projects/UDEMY/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","colleactionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","collectionref","newDocref","commit","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,+BAFC;AAGbC,EAAAA,WAAW,EAAE,sCAHA;AAIbC,EAAAA,SAAS,EAAE,eAJE;AAKbC,EAAAA,aAAa,EAAE,2BALF;AAMbC,EAAAA,iBAAiB,EAAE,aANN;AAObC,EAAAA,KAAK,EAAE,0CAPM;AAQbC,EAAAA,aAAa,EAAE;AARF,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAAEJ,QAAAA,WAAF;AAAeC,QAAAA,KAAf;AAAsBC,QAAAA,SAAtB;AAAiC,WAAGV;AAApC,OAAZ,CAAN;AACD,KAFD,CAEE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AACD,SAAOf,OAAP;AACD,CAdM;AAgBP,OAAO,MAAMgB,yBAAyB,GAAG,OAAOC,cAAP,EAAuBC,YAAvB,KAAwC;AAC/E,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,cAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAI;AAC1B,UAAMC,SAAS,GAAGC,aAAa,CAACvB,GAAd,EAAlB;AACAmB,IAAAA,KAAK,CAACV,GAAN,CAAUe,SAAV,EAAqBH,GAArB;AACD,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACM,MAAN,EAAb;AACD,CAVM;AAYPxC,QAAQ,CAACyC,aAAT,CAAuBxC,MAAvB;AAEA,OAAO,MAAMyC,IAAI,GAAG1C,QAAQ,CAAC0C,IAAT,EAAb;AACP,OAAO,MAAM5B,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAM6B,QAAQ,GAAG,IAAI3C,QAAQ,CAAC0C,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe3C,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyBAZq3mOeToR-cx-tRpkpRyRYYbNMpVVug\",\n  authDomain: \"crwn-db-7e72d.firebaseapp.com\",\n  databaseURL: \"https://crwn-db-7e72d.firebaseio.com\",\n  projectId: \"crwn-db-7e72d\",\n  storageBucket: \"crwn-db-7e72d.appspot.com\",\n  messagingSenderId: \"47115180316\",\n  appId: \"1:47115180316:web:0c2aacc2ad8b8a1f3cc2d9\",\n  measurementId: \"G-DYD43V14E6\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n  if (!snapshot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n    try {\n      await userRef.set({ displayName, email, createdAt, ...additionalData });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (colleactionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(colleactionKey);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionref.doc();\n    batch.set(newDocref, obj)\n  })\n\n  return await batch.commit();\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}