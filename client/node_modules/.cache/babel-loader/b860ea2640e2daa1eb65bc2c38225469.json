{"ast":null,"code":"var _jsxFileName = \"/Users/ng075210/React-Projects/UDEMY/crwn-clothing/src/pages/shop/shop.component.js\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from '../../redux/shop/shop.selector';\nimport CollectionOverviewContainer from '../../components/collection-overview/collections-overview.container';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport Collection from '../../components/collection/collection.component';\nconst CollectionPageWithSpinner = withSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionLoaded\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionOverviewContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/ng075210/React-Projects/UDEMY/crwn-clothing/src/pages/shop/shop.component.js"],"names":["React","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionOverviewContainer","withSpinner","Collection","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SACEC,0BADF,EAEEC,yBAFF,QAGO,gCAHP;AAKA,OAAOC,2BAAP,MAAwC,qEAAxC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,UAAP,MAAuB,kDAAvB;AAEA,MAAMC,yBAAyB,GAAGF,WAAW,CAACC,UAAD,CAA7C;;AAEA,MAAME,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAiC,KAAKU,KAA5C;AACAV,IAAAA,0BAA0B;AAC3B;;AACDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAgC,KAAKH,KAA3C;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGE,MAAA,SAAS,EAAEX,2BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAES,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGJ,KAAD,IACN,oBAAC,yBAAD;AACE,QAAA,SAAS,EAAE,CAACG;AADd,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAkBD;;AAzBoC;;AA4BvC,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC/Cc,EAAAA,kBAAkB,EAAEX;AAD2B,CAAD,CAAhD;;AAIA,MAAMc,kBAAkB,GAAIC,QAAD,KAAe;AACxCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeF,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport {\n  selectIsCollectionFetching,\n  selectIsCollectionsLoaded,\n} from '../../redux/shop/shop.selector';\n\nimport CollectionOverviewContainer from '../../components/collection-overview/collections-overview.container';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport Collection from '../../components/collection/collection.component';\n\nconst CollectionPageWithSpinner = withSpinner(Collection);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const { fetchCollectionsStartAsync } = this.props;\n    fetchCollectionsStartAsync();\n  }\n  render() {\n    const { match, isCollectionLoaded } = this.props;\n    return (\n      <div className='shop-page'>\n        <Route\n          exact\n          path={`${match.path}`}\n          component={CollectionOverviewContainer}\n        ></Route>\n        <Route\n          path={`${match.path}/:collectionId`}\n          render={(props) => (\n            <CollectionPageWithSpinner\n              isLoading={!isCollectionLoaded}\n              {...props}\n            />\n          )}\n        ></Route>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionLoaded: selectIsCollectionsLoaded,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}